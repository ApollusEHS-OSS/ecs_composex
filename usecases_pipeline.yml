---
# Pipeline test
Description: >-
  Pipeline to release Lambda layers publicly when new release is created

Metadata:
  Author: https://github.com/johnpreston

Parameters:
  ArtifactsBucketName:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cicd/shared/s3/artifacts/name

  CfnTemplatesBucketName:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cicd/shared/s3/templates/name

  BranchName:
    Type: String
    Default: master

  RepositoryProvider:
    Type: String
    AllowedValues:
      - GitHub
      - CodeCommit
    Default: GitHub

  RepositoryName:
    Type: String
  KmsKeyArn:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cicd/shared/kms/arn

  BuildLogsRetentionDays:
    Type: Number
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]
    Default: 14

Resources:
  BuildLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub 'codebuild/${RepositoryName}/${AWS::StackName}'
      RetentionInDays: !Ref BuildLogsRetentionDays

  CloudformationRole:
    Type: AWS::IAM::Role
    Properties:
      Policies:
        - PolicyName: AllowCreateRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: AllowIamRoleCreation
                Effect: Allow
                Resource:
                  - '*'
                Action:
                  - iam:GetRole
                  - iam:UpdateAssumeRolePolicy
                  - iam:ListRoleTags
                  - iam:UntagRole
                  - iam:TagRole
                  - iam:PutRolePermissionsBoundary
                  - iam:RemoveRoleFromInstanceProfile
                  - iam:UpdateRoleDescription
                  - iam:CreateRole
                  - iam:DeleteRole
                  - iam:AttachRolePolicy
                  - iam:PutRolePolicy
                  - iam:DeleteRolePermissionsBoundary
                  - iam:AddRoleToInstanceProfile
                  - iam:ListInstanceProfilesForRole
                  - iam:PassRole
                  - iam:CreateServiceLinkedRole
                  - iam:DetachRolePolicy
                  - iam:ListAttachedRolePolicies
                  - iam:DeleteRolePolicy
                  - iam:UpdateRole
                  - iam:ListRolePolicies
                  - iam:GetRolePolicy
        - PolicyName: KmsDecryptData
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: DecryptEncryptArtifacts
                Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:DescribeKey
                Resource:
                   - !Ref KmsKeyArn
        - PolicyName: S3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - s3:GetObject*
                  - s3:ListBucket
                  - s3:GetBucket*
                Effect: Allow
                Resource:
                  - !Sub 'arn:${AWS::Partition}:s3:::${ArtifactsBucketName}'
                  - !Sub 'arn:${AWS::Partition}:s3:::${ArtifactsBucketName}/*'
                Sid: AllowRwToArtifactsBucket
              - Action:
                  - s3:GetObject*
                  - s3:ListBucket
                  - s3:GetBucket*
                Effect: Allow
                Sid: GetCloudformationTemplates
                Resource:
                  - !Sub 'arn:${AWS::Partition}:s3:::${CfnTemplatesBucketName}'
                  - !Sub 'arn:${AWS::Partition}:s3:::${CfnTemplatesBucketName}/*'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/PowerUserAccess
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - !Sub 'cloudformation.${AWS::URLSuffix}'
            Condition:
              Bool:
                aws:SecureTransport: true

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - !Sub 'codepipeline.${AWS::URLSuffix}'
            Condition:
              Bool:
                aws:SecureTransport: true
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - s3:PutObject
                  - s3:PutObjectVersion
                  - s3:GetObject
                  - s3:GetObjectVersion
                Effect: Allow
                Resource:
                  - !Sub 'arn:${AWS::Partition}:s3:::${ArtifactsBucketName}/*'
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                  - codebuild:Get*
                  - codebuild:Describe*
                Effect: Allow
                Resource: '*'
        - PolicyName: KmsAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: DecryptEncryptArtifacts
                Effect: Allow
                Action:
                  - kms:DescribeKey
                  - kms:GenerateDataKey*
                  - kms:Encrypt
                  - kms:ReEncrypt*
                  - kms:Decrypt
                Resource:
                  - !Ref KmsKeyArn
        - PolicyName: AccessForCloudFormation
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - iam:PassRole
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService:
                      - !Sub 'cloudformation.${AWS::URLSuffix}'
                Effect: Allow
                Resource:
                  - !GetAtt 'CloudformationRole.Arn'
                Sid: AllowsPipelineToPassRoleToCfn
              - Action:
                  - cloudformation:CreateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStacks
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:SetStackPolicy
                  - cloudformation:ValidateTemplate
                Effect: Allow
                Resource: '*'
                Sid: AllowsCloudFormationAccess

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - !Sub 'codebuild.${AWS::URLSuffix}'
      Policies:
        - PolicyName: EcsComposeXBaseAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: S3ObjectsAccess
                Action:
                  - s3:PutObject*
                  - s3:GetObject*
                Effect: Allow
                Resource:
                  - !Sub 'arn:${AWS::Partition}:s3:::${CfnTemplatesBucketName}/*'
                  - !Sub 'arn:${AWS::Partition}:s3:::${ArtifactsBucketName}/*'
              - Sid: S3BucketAccess
                Action:
                  - s3:ListBucket
                Effect: Allow
                Resource:
                  - !Sub 'arn:${AWS::Partition}:s3:::${CfnTemplatesBucketName}'
                  - !Sub 'arn:${AWS::Partition}:s3:::${ArtifactsBucketName}'
              - Sid: CloudWatchLogs
                Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !GetAtt BuildLogsGroup.Arn
              - Sid: CloudFormationAccess
                Resource:
                  - '*'
                Effect: Allow
                Action:
                  - cloudformation:ValidateTemplate
                  - cloudformation:Describe*
                  - cloudformation:Get*
              - Sid: Ec2Access
                Effect: Allow
                Action:
                  - ec2:DescribeAvailabilityZones
                Resource:
                  - "*"
              - Sid: RDSHelpersAccess
                Effect: Allow
                Resource:
                  - "*"
                Action:
                  - rds:DescribeDBEngine*
                  - rds:DescribeEngineDefaultClusterParameters
              - Sid: CodeBuildAccess
                Effect: Allow
                Resource:
                  - !Sub 'arn:${AWS::Partition}:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/*'
                Action:
                  - codebuild:UpdateReportGroup
                  - codebuild:CreateReportGroup
                  - codebuild:CreateReport
                  - codebuild:BatchPutTestCases
                  - codebuild:UpdateReport
              - Sid: DecryptEncryptArtifacts
                Effect: Allow
                Action:
                  - kms:DescribeKey
                  - kms:GenerateDataKey*
                  - kms:Encrypt
                  - kms:ReEncrypt*
                  - kms:Decrypt
                Resource:
                  - !Ref KmsKeyArn

        - PolicyName: EcsComposeXAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: Ec2BasicReads
                Effect: Allow
                Resource:
                  - '*'
                Action:
                  - ec2:Describe*
              - Action:
                  - s3:PutObject
                  - s3:PutObjectVersion
                  - s3:GetObject
                  - s3:GetObjectVersion
                Effect: Allow
                Resource:
                  - !Sub 'arn:${AWS::Partition}:s3:::${ArtifactsBucketName}/*'
                  - !Sub 'arn:${AWS::Partition}:s3:::${CfnTemplatesBucketName}/*'
              - Sid: EcsComposeXOtherS3Access
                Resource:
                  - !Sub 'arn:${AWS::Partition}:s3:::${CfnTemplatesBucketName}'
                NotAction:
                  - s3:DeleteBucket
                Effect: Allow
              - Sid: CloudFormationActions
                Effect: Allow
                Resource: '*'
                Action:
                  - cloudformation:Describe*
                  - cloudformation:Get*
                  - cloudformation:Validate*

  EcsComposeXGenerate:
    Type: AWS::CodeBuild::Project
    Properties:
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Ref BuildLogsGroup
          Status: ENABLED
          StreamName: prerelease
      BadgeEnabled: False
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole: !GetAtt 'CodeBuildRole.Arn'
      Description: !Sub 'Executes EcsComposeX against use-cases'
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: CFN_TPL_BUCKET
            Type: PLAINTEXT
            Value: !Ref CfnTemplatesBucketName
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec_usecases.yml

  EcsComposeXTest:
    Type: AWS::CodeBuild::Project
    Properties:
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Ref BuildLogsGroup
          Status: ENABLED
          StreamName: prerelease
      BadgeEnabled: False
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole: !GetAtt 'CodeBuildRole.Arn'
      Description: !Sub 'Executes EcsComposeX against use-cases'
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: CFN_TPL_BUCKET
            Type: PLAINTEXT
            Value: !Ref CfnTemplatesBucketName
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec_testcases.yml

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref ArtifactsBucketName
        EncryptionKey:
          Id: !Ref KmsKeyArn
          Type: KMS
        Type: S3
      RestartExecutionOnUpdate: true
      RoleArn: !GetAtt 'CodePipelineRole.Arn'
      Stages:
        - Name: PipelineSource
          Actions:
            - Name: ComposeXSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: !Ref RepositoryProvider
                Version: '1'
              Configuration:
                Branch: !Ref BranchName
                Owner: lambda-my-aws
                PollForSourceChanges: false
                Repo: !Ref RepositoryName
                OAuthToken: '{{resolve:secretsmanager:GHToken:SecretString:token}}'
              OutputArtifacts:
                - Name: ComposeXApp
              RunOrder: '1'
        - Name: !Sub 'GenerateUseCaseTemplates'
          Actions:
            - Name: EcsComposeXGenerate
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref EcsComposeXGenerate
              InputArtifacts:
                - Name: ComposeXApp
              OutputArtifacts:
                - Name: UseCases
              RunOrder: '1'
        - Name: !Sub 'DeployUseCases'
          Actions:
            - Name: Case01
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt CloudformationRole.Arn
                StackName: case01
                TemplatePath: !Sub 'UseCases::case01/root.yml'
#                TemplateConfiguration: !Sub 'ComposeXOutput::composex_root.params.json'
                Capabilities: 'CAPABILITY_AUTO_EXPAND,CAPABILITY_IAM'
              InputArtifacts:
                - Name: UseCases
              OutputArtifacts:
                - Name: Case01Output
              RunOrder: '1'
            - Name: Case02
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt CloudformationRole.Arn
                StackName: case02
                TemplatePath: !Sub 'UseCases::case02/root.yml'
#                TemplateConfiguration: !Sub 'ComposeXOutput::composex_root.params.json'
                Capabilities: 'CAPABILITY_AUTO_EXPAND,CAPABILITY_IAM'
              InputArtifacts:
                - Name: UseCases
              OutputArtifacts:
                - Name: Case02Output
              RunOrder: '1'
        - Name: !Sub 'TestUseCases'
          Actions:
            - Name: TestUseCase01
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref EcsComposeXTest
              InputArtifacts:
                - Name: Case01Output
              RunOrder: '1'
            - Name: TestUseCase02
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref EcsComposeXTest
              InputArtifacts:
                - Name: Case01Output
              RunOrder: '1'
        - Name: !Sub 'Cleanup'
          Actions:
            - ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: DELETE_ONLY
                RoleArn: !GetAtt CodePipelineRole.Arn
                StackName: case01
              Name: DeleteUseCase01
              RunOrder: '1'
            - ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: DELETE_ONLY
                RoleArn: !GetAtt CodePipelineRole.Arn
                StackName: case02
              Name: DeleteUseCase02
              RunOrder: '2'

  WebHook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: '{{resolve:secretsmanager:GHToken:SecretString:token}}'
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: "refs/heads/{Branch}"
      Name: String
      RegisterWithThirdParty: True
      TargetAction: ComposeXSource
      TargetPipeline: !Ref Pipeline
      TargetPipelineVersion: !GetAtt 'Pipeline.Version'


  ReportGroup:
    Type: AWS::CodeBuild::ReportGroup
    Properties:
      ExportConfig:
        S3Destination:
          Bucket: !Ref ArtifactsBucketName
          EncryptionDisabled: False
          Path: !Sub '/builds/reports/${RepositoryName}/use-cases/'
        ExportConfigType: S3
      Type: TEST
      Name: !Sub "${RepositoryName}-usecases"
